
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN ATTACH CALL CHAIN COMMA CONST DIVIDE ELSE EOF EQUALS EVENT FALSE FEEDBACK FILTEROP FLOAT FN FOR GE GT IDENTIFIER IF INT LAMBDA LBRACE LE LPAREN LT MAP MINUS MULTIPLY NE NEWLINE NOT OR PLUS RBRACE REDUCE RETURN RPAREN SBOOL SEMICOLON SEVENT SFLOAT SINT SSTREAM SSTRING STREAM STREAMMERGE STREAMSPLIT STRING TO_STREAM TRUE TYPEHINTCOLON VAR WHILEprogram : statement_liststatement : declaration\n                | expression SEMICOLON\n                | return_statement SEMICOLON\n                | control_flow\n                | assignment SEMICOLONstatement_list : statement\n                      | statement_list statementfunction_call : IDENTIFIER LPAREN opt_arg_list RPARENopt_arg_list : arg_list\n                    | emptyarg_list : expression\n                | arg_list COMMA expressionfunction_definition : FN IDENTIFIER LPAREN opt_param_list RPAREN block_statement\n                           | FN IDENTIFIER LPAREN opt_param_list RPAREN typehint block_statementreturn_statement : RETURN expressionblock_statement : LBRACE statement_list RBRACElambda_function : FN LPAREN opt_param_list RPAREN LAMBDA block_statement\n                       | FN LPAREN opt_param_list RPAREN typehint LAMBDA block_statement\n                       | LPAREN opt_param_list RPAREN LAMBDA block_statement\n                       | LPAREN opt_param_list RPAREN typehint LAMBDA block_statement\n                       | LPAREN opt_param_list RPAREN LAMBDA logic_expressionopt_param_list : param_list\n                      | emptyparam_list : param\n                  | param_list COMMA paramparam : IDENTIFIER\n             | IDENTIFIER typehintdeclaration : VAR declaration_base SEMICOLON\n                    | CONST declaration_base SEMICOLON\n                    | function_definitiondeclaration_base : IDENTIFIER\n                        | IDENTIFIER ASSIGN expression\n                        | IDENTIFIER typehint\n                        | IDENTIFIER typehint ASSIGN expression\n                        typehint : TYPEHINTCOLON typetype : SINT\n            | SFLOAT\n            | SSTRING\n            | SBOOL\n            | SSTREAM\n            | SEVENTptype : INT\n            | FLOAT\n            | STRING\n            | TRUE\n            | FALSEbinary_arithmetic_operation_rest : PLUS expression\n                        | MINUS expression\n                        | MULTIPLY expression\n                        | DIVIDE expression\n    binary_arithmetic_operation : expression binary_arithmetic_operation_rest\n                        | ptype binary_arithmetic_operation_rest\n    unary_arithmetic_operation : MINUS expression\n                        | PLUS expression\n    binary_logic_operation : expression binary_logic_operation_rest\n                        | ptype binary_logic_operation_rest\n\n    binary_logic_operation_rest : EQUALS ptype\n                        | GT ptype\n                        | LT ptype\n                        | GE ptype\n                        | LE ptype\n                        | AND ptype\n                        | OR ptype\n                        |  EQUALS expression\n                        | GT expression\n                        | LT expression\n                        | GE expression\n                        | LE expression\n                        | AND expression\n                        | OR expression\n    unary_logic_operation : NOT expression\n    logic_expression : binary_logic_operation\n                        | unary_logic_operation\n    function_call_expression : function_call\n    object_call_expression : expression CALL function_call_expression\n    stream_operation : unary_stream_operation\n                        | binary_stream_operation\n                        | special_stream_operation\n    unary_stream_operation : IDENTIFIER TO_STREAM\n\n    binary_stream_operation : IDENTIFIER CHAIN IDENTIFIER\n                        | IDENTIFIER STREAMSPLIT IDENTIFIER\n                        | IDENTIFIER STREAMMERGE IDENTIFIER\n                        | IDENTIFIER FEEDBACK IDENTIFIER\n    special_stream_operation : expression FILTEROP LPAREN lambda_function RPAREN expression\n                        | expression MAP LPAREN lambda_function RPAREN expression\n                        | expression REDUCE LPAREN lambda_function RPAREN expression\n    simple_expression : ptype\n                        | type\n                        | IDENTIFIER\n                        | LPAREN expression RPAREN\n                        | lambda_function\n\n    complex_expression : binary_arithmetic_operation\n                        | unary_arithmetic_operation\n                        | logic_expression\n                        | function_call_expression\n                        | object_call_expression\n                        | stream_operation\n    expression : simple_expression\n                | complex_expression\n                | LPAREN expression RPAREN\n\n    control_flow : conditional\n                    | loopconditional : IF LPAREN expression RPAREN block_statement ELSE block_statement\n                    | IF LPAREN expression RPAREN block_statementloop : FOR LPAREN declaration SEMICOLON expression SEMICOLON expression RPAREN block_statement\n            | WHILE LPAREN expression RPAREN block_statementassignment : IDENTIFIER ASSIGN expressionempty :'
    
_lr_action_items = {'VAR':([0,2,3,4,7,11,16,17,52,53,71,72,97,125,129,173,181,183,187,189,195,196,198,201,],[9,9,-7,-2,-5,-31,-102,-103,-8,-3,-4,-6,9,-29,-30,9,-105,-107,9,-14,-17,-15,-104,-106,]),'CONST':([0,2,3,4,7,11,16,17,52,53,71,72,97,125,129,173,181,183,187,189,195,196,198,201,],[10,10,-7,-2,-5,-31,-102,-103,-8,-3,-4,-6,10,-29,-30,10,-105,-107,10,-14,-17,-15,-104,-106,]),'LPAREN':([0,2,3,4,7,11,14,15,16,17,18,19,29,30,31,43,44,51,52,53,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,80,82,84,85,86,92,96,98,103,104,105,106,125,126,129,155,157,161,165,167,168,169,173,181,183,187,189,194,195,196,198,201,],[14,14,-7,-2,-5,-31,14,14,-102,-103,86,93,96,97,98,14,14,14,-8,-3,104,105,106,14,14,14,14,14,14,14,14,14,14,14,-4,-6,86,93,86,14,14,143,14,14,86,150,150,150,-29,14,-30,14,14,14,14,14,14,14,14,-105,-107,14,-14,14,-17,-15,-104,-106,]),'RETURN':([0,2,3,4,7,11,16,17,52,53,71,72,125,129,173,181,183,187,189,195,196,198,201,],[15,15,-7,-2,-5,-31,-102,-103,-8,-3,-4,-6,-29,-30,15,-105,-107,15,-14,-17,-15,-104,-106,]),'IDENTIFIER':([0,2,3,4,7,9,10,11,14,15,16,17,19,43,44,51,52,53,55,60,61,62,63,64,65,66,67,68,69,70,71,72,85,86,88,89,90,91,93,96,98,125,126,129,132,143,148,150,155,157,161,165,167,168,169,173,181,183,187,189,194,195,196,198,201,],[18,18,-7,-2,-5,74,74,-31,80,84,-102,-103,92,84,84,84,-8,-3,103,84,84,84,84,84,84,84,84,84,84,84,-4,-6,84,84,139,140,141,142,145,84,84,-29,84,-30,145,145,92,145,84,84,84,84,84,84,84,18,-105,-107,18,-14,84,-17,-15,-104,-106,]),'FN':([0,2,3,4,7,11,14,15,16,17,43,44,51,52,53,60,61,62,63,64,65,66,67,68,69,70,71,72,85,86,96,97,98,104,105,106,125,126,129,155,157,161,165,167,168,169,173,181,183,187,189,194,195,196,198,201,],[19,19,-7,-2,-5,-31,82,82,-102,-103,82,82,82,-8,-3,82,82,82,82,82,82,82,82,82,82,82,-4,-6,82,82,82,148,82,82,82,82,-29,82,-30,82,82,82,82,82,82,82,19,-105,-107,19,-14,82,-17,-15,-104,-106,]),'IF':([0,2,3,4,7,11,16,17,52,53,71,72,125,129,173,181,183,187,189,195,196,198,201,],[29,29,-7,-2,-5,-31,-102,-103,-8,-3,-4,-6,-29,-30,29,-105,-107,29,-14,-17,-15,-104,-106,]),'FOR':([0,2,3,4,7,11,16,17,52,53,71,72,125,129,173,181,183,187,189,195,196,198,201,],[30,30,-7,-2,-5,-31,-102,-103,-8,-3,-4,-6,-29,-30,30,-105,-107,30,-14,-17,-15,-104,-106,]),'WHILE':([0,2,3,4,7,11,16,17,52,53,71,72,125,129,173,181,183,187,189,195,196,198,201,],[31,31,-7,-2,-5,-31,-102,-103,-8,-3,-4,-6,-29,-30,31,-105,-107,31,-14,-17,-15,-104,-106,]),'INT':([0,2,3,4,7,11,14,15,16,17,43,44,51,52,53,60,61,62,63,64,65,66,67,68,69,70,71,72,85,86,96,98,125,126,129,155,157,161,165,167,168,169,173,181,183,187,189,194,195,196,198,201,],[32,32,-7,-2,-5,-31,32,32,-102,-103,32,32,32,-8,-3,32,32,32,32,32,32,32,32,32,32,32,-4,-6,32,32,32,32,-29,32,-30,32,32,32,32,32,32,32,32,-105,-107,32,-14,32,-17,-15,-104,-106,]),'FLOAT':([0,2,3,4,7,11,14,15,16,17,43,44,51,52,53,60,61,62,63,64,65,66,67,68,69,70,71,72,85,86,96,98,125,126,129,155,157,161,165,167,168,169,173,181,183,187,189,194,195,196,198,201,],[33,33,-7,-2,-5,-31,33,33,-102,-103,33,33,33,-8,-3,33,33,33,33,33,33,33,33,33,33,33,-4,-6,33,33,33,33,-29,33,-30,33,33,33,33,33,33,33,33,-105,-107,33,-14,33,-17,-15,-104,-106,]),'STRING':([0,2,3,4,7,11,14,15,16,17,43,44,51,52,53,60,61,62,63,64,65,66,67,68,69,70,71,72,85,86,96,98,125,126,129,155,157,161,165,167,168,169,173,181,183,187,189,194,195,196,198,201,],[34,34,-7,-2,-5,-31,34,34,-102,-103,34,34,34,-8,-3,34,34,34,34,34,34,34,34,34,34,34,-4,-6,34,34,34,34,-29,34,-30,34,34,34,34,34,34,34,34,-105,-107,34,-14,34,-17,-15,-104,-106,]),'TRUE':([0,2,3,4,7,11,14,15,16,17,43,44,51,52,53,60,61,62,63,64,65,66,67,68,69,70,71,72,85,86,96,98,125,126,129,155,157,161,165,167,168,169,173,181,183,187,189,194,195,196,198,201,],[35,35,-7,-2,-5,-31,35,35,-102,-103,35,35,35,-8,-3,35,35,35,35,35,35,35,35,35,35,35,-4,-6,35,35,35,35,-29,35,-30,35,35,35,35,35,35,35,35,-105,-107,35,-14,35,-17,-15,-104,-106,]),'FALSE':([0,2,3,4,7,11,14,15,16,17,43,44,51,52,53,60,61,62,63,64,65,66,67,68,69,70,71,72,85,86,96,98,125,126,129,155,157,161,165,167,168,169,173,181,183,187,189,194,195,196,198,201,],[36,36,-7,-2,-5,-31,36,36,-102,-103,36,36,36,-8,-3,36,36,36,36,36,36,36,36,36,36,36,-4,-6,36,36,36,36,-29,36,-30,36,36,36,36,36,36,36,36,-105,-107,36,-14,36,-17,-15,-104,-106,]),'SINT':([0,2,3,4,7,11,14,15,16,17,43,44,51,52,53,60,61,62,63,64,65,66,67,68,69,70,71,72,85,86,96,98,125,126,128,129,155,157,161,165,167,168,169,173,181,183,187,189,194,195,196,198,201,],[37,37,-7,-2,-5,-31,37,37,-102,-103,37,37,37,-8,-3,37,37,37,37,37,37,37,37,37,37,37,-4,-6,37,37,37,37,-29,37,37,-30,37,37,37,37,37,37,37,37,-105,-107,37,-14,37,-17,-15,-104,-106,]),'SFLOAT':([0,2,3,4,7,11,14,15,16,17,43,44,51,52,53,60,61,62,63,64,65,66,67,68,69,70,71,72,85,86,96,98,125,126,128,129,155,157,161,165,167,168,169,173,181,183,187,189,194,195,196,198,201,],[38,38,-7,-2,-5,-31,38,38,-102,-103,38,38,38,-8,-3,38,38,38,38,38,38,38,38,38,38,38,-4,-6,38,38,38,38,-29,38,38,-30,38,38,38,38,38,38,38,38,-105,-107,38,-14,38,-17,-15,-104,-106,]),'SSTRING':([0,2,3,4,7,11,14,15,16,17,43,44,51,52,53,60,61,62,63,64,65,66,67,68,69,70,71,72,85,86,96,98,125,126,128,129,155,157,161,165,167,168,169,173,181,183,187,189,194,195,196,198,201,],[39,39,-7,-2,-5,-31,39,39,-102,-103,39,39,39,-8,-3,39,39,39,39,39,39,39,39,39,39,39,-4,-6,39,39,39,39,-29,39,39,-30,39,39,39,39,39,39,39,39,-105,-107,39,-14,39,-17,-15,-104,-106,]),'SBOOL':([0,2,3,4,7,11,14,15,16,17,43,44,51,52,53,60,61,62,63,64,65,66,67,68,69,70,71,72,85,86,96,98,125,126,128,129,155,157,161,165,167,168,169,173,181,183,187,189,194,195,196,198,201,],[40,40,-7,-2,-5,-31,40,40,-102,-103,40,40,40,-8,-3,40,40,40,40,40,40,40,40,40,40,40,-4,-6,40,40,40,40,-29,40,40,-30,40,40,40,40,40,40,40,40,-105,-107,40,-14,40,-17,-15,-104,-106,]),'SSTREAM':([0,2,3,4,7,11,14,15,16,17,43,44,51,52,53,60,61,62,63,64,65,66,67,68,69,70,71,72,85,86,96,98,125,126,128,129,155,157,161,165,167,168,169,173,181,183,187,189,194,195,196,198,201,],[41,41,-7,-2,-5,-31,41,41,-102,-103,41,41,41,-8,-3,41,41,41,41,41,41,41,41,41,41,41,-4,-6,41,41,41,41,-29,41,41,-30,41,41,41,41,41,41,41,41,-105,-107,41,-14,41,-17,-15,-104,-106,]),'SEVENT':([0,2,3,4,7,11,14,15,16,17,43,44,51,52,53,60,61,62,63,64,65,66,67,68,69,70,71,72,85,86,96,98,125,126,128,129,155,157,161,165,167,168,169,173,181,183,187,189,194,195,196,198,201,],[42,42,-7,-2,-5,-31,42,42,-102,-103,42,42,42,-8,-3,42,42,42,42,42,42,42,42,42,42,42,-4,-6,42,42,42,42,-29,42,42,-30,42,42,42,42,42,42,42,42,-105,-107,42,-14,42,-17,-15,-104,-106,]),'MINUS':([0,2,3,4,5,7,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,60,61,62,63,64,65,66,67,68,69,70,71,72,76,80,83,84,85,86,87,94,95,96,98,99,100,101,102,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,130,134,138,139,140,141,142,146,149,154,155,157,160,161,165,167,168,169,170,171,172,173,174,175,177,181,182,183,184,185,186,187,188,189,191,194,195,196,197,198,199,201,],[43,43,-7,-2,61,-5,-31,-99,-100,43,43,-102,-103,-90,61,-89,-92,-93,-94,-95,-96,-97,-98,-43,-44,-45,-46,-47,-37,-38,-39,-40,-41,-42,43,43,-73,-74,-75,-77,-78,-79,43,-8,-3,-52,-56,43,43,43,43,43,43,43,43,43,43,43,-4,-6,61,-90,61,-90,43,43,-80,-53,-57,43,43,61,61,61,-76,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-29,43,-30,-91,61,61,-81,-82,-83,-84,61,61,61,43,43,-9,43,43,43,43,43,61,-20,-22,43,61,61,61,-105,61,-107,61,61,61,43,-21,-14,-18,43,-17,-15,-19,-104,61,-106,]),'PLUS':([0,2,3,4,5,7,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,60,61,62,63,64,65,66,67,68,69,70,71,72,76,80,83,84,85,86,87,94,95,96,98,99,100,101,102,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,130,134,138,139,140,141,142,146,149,154,155,157,160,161,165,167,168,169,170,171,172,173,174,175,177,181,182,183,184,185,186,187,188,189,191,194,195,196,197,198,199,201,],[44,44,-7,-2,60,-5,-31,-99,-100,44,44,-102,-103,-90,60,-89,-92,-93,-94,-95,-96,-97,-98,-43,-44,-45,-46,-47,-37,-38,-39,-40,-41,-42,44,44,-73,-74,-75,-77,-78,-79,44,-8,-3,-52,-56,44,44,44,44,44,44,44,44,44,44,44,-4,-6,60,-90,60,-90,44,44,-80,-53,-57,44,44,60,60,60,-76,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-29,44,-30,-91,60,60,-81,-82,-83,-84,60,60,60,44,44,-9,44,44,44,44,44,60,-20,-22,44,60,60,60,-105,60,-107,60,60,60,44,-21,-14,-18,44,-17,-15,-19,-104,60,-106,]),'NOT':([0,2,3,4,7,11,14,15,16,17,43,44,51,52,53,60,61,62,63,64,65,66,67,68,69,70,71,72,85,86,96,98,125,126,129,155,157,161,165,167,168,169,173,181,183,187,189,194,195,196,198,201,],[51,51,-7,-2,-5,-31,51,51,-102,-103,51,51,51,-8,-3,51,51,51,51,51,51,51,51,51,51,51,-4,-6,51,51,51,51,-29,51,-30,51,51,51,51,51,51,51,51,-105,-107,51,-14,51,-17,-15,-104,-106,]),'$end':([1,2,3,4,7,11,16,17,52,53,71,72,125,129,181,183,189,195,196,198,201,],[0,-1,-7,-2,-5,-31,-102,-103,-8,-3,-4,-6,-29,-30,-105,-107,-14,-17,-15,-104,-106,]),'RBRACE':([3,4,7,11,16,17,52,53,71,72,125,129,181,183,187,189,195,196,198,201,],[-7,-2,-5,-31,-102,-103,-8,-3,-4,-6,-29,-30,-105,-107,195,-14,-17,-15,-104,-106,]),'SEMICOLON':([5,6,8,11,12,13,18,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,50,54,56,73,74,75,83,84,87,94,95,99,100,101,102,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,127,129,130,134,139,140,141,142,147,154,156,160,170,171,172,182,184,185,186,188,189,191,195,196,197,],[53,71,72,-31,-99,-100,-90,-88,-89,-92,-93,-94,-95,-96,-97,-98,-43,-44,-45,-46,-47,-37,-38,-39,-40,-41,-42,-73,-74,-75,-77,-78,-79,-52,-56,125,-32,129,-16,-90,-80,-53,-57,-54,-55,-72,-76,-48,-49,-50,-51,-58,-65,-59,-66,-60,-67,-61,-68,-62,-69,-63,-70,-64,-71,-29,-34,-30,-91,-108,-81,-82,-83,-84,165,-33,-36,-9,-35,-20,-22,194,-85,-86,-87,-21,-14,-18,-17,-15,-19,]),'CALL':([5,12,13,18,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,50,54,56,76,80,83,84,87,94,95,99,100,101,102,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,130,134,138,139,140,141,142,146,149,154,160,170,171,172,174,175,177,182,184,185,186,188,191,195,197,199,],[55,-99,-100,-90,-88,-89,-92,-93,-94,-95,-96,-97,-98,-43,-44,-45,-46,-47,-37,-38,-39,-40,-41,-42,-73,-74,-75,-77,-78,-79,-52,-56,55,-90,55,-90,-80,-53,-57,55,55,55,-76,55,55,55,55,-58,55,-59,55,-60,55,-61,55,-62,55,-63,55,-64,55,-91,55,55,-81,-82,-83,-84,55,55,55,-9,55,-20,-22,55,-88,55,55,55,55,55,-21,-18,-17,-19,55,]),'FILTEROP':([5,12,13,18,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,50,54,56,76,80,83,84,87,94,95,99,100,101,102,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,130,134,138,139,140,141,142,146,149,154,160,170,171,172,174,175,177,182,184,185,186,188,191,195,197,199,],[57,-99,-100,-90,-88,-89,-92,-93,-94,-95,-96,-97,-98,-43,-44,-45,-46,-47,-37,-38,-39,-40,-41,-42,-73,-74,-75,-77,-78,-79,-52,-56,57,-90,57,-90,-80,-53,-57,57,57,57,-76,57,57,57,57,-58,57,-59,57,-60,57,-61,57,-62,57,-63,57,-64,57,-91,57,57,-81,-82,-83,-84,57,57,57,-9,57,-20,-22,57,-88,57,57,57,57,57,-21,-18,-17,-19,57,]),'MAP':([5,12,13,18,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,50,54,56,76,80,83,84,87,94,95,99,100,101,102,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,130,134,138,139,140,141,142,146,149,154,160,170,171,172,174,175,177,182,184,185,186,188,191,195,197,199,],[58,-99,-100,-90,-88,-89,-92,-93,-94,-95,-96,-97,-98,-43,-44,-45,-46,-47,-37,-38,-39,-40,-41,-42,-73,-74,-75,-77,-78,-79,-52,-56,58,-90,58,-90,-80,-53,-57,58,58,58,-76,58,58,58,58,-58,58,-59,58,-60,58,-61,58,-62,58,-63,58,-64,58,-91,58,58,-81,-82,-83,-84,58,58,58,-9,58,-20,-22,58,-88,58,58,58,58,58,-21,-18,-17,-19,58,]),'REDUCE':([5,12,13,18,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,50,54,56,76,80,83,84,87,94,95,99,100,101,102,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,130,134,138,139,140,141,142,146,149,154,160,170,171,172,174,175,177,182,184,185,186,188,191,195,197,199,],[59,-99,-100,-90,-88,-89,-92,-93,-94,-95,-96,-97,-98,-43,-44,-45,-46,-47,-37,-38,-39,-40,-41,-42,-73,-74,-75,-77,-78,-79,-52,-56,59,-90,59,-90,-80,-53,-57,59,59,59,-76,59,59,59,59,-58,59,-59,59,-60,59,-61,59,-62,59,-63,59,-64,59,-91,59,59,-81,-82,-83,-84,59,59,59,-9,59,-20,-22,59,-88,59,59,59,59,59,-21,-18,-17,-19,59,]),'MULTIPLY':([5,12,13,18,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,50,54,56,76,80,83,84,87,94,95,99,100,101,102,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,130,134,138,139,140,141,142,146,149,154,160,170,171,172,174,175,177,182,184,185,186,188,191,195,197,199,],[62,-99,-100,-90,62,-89,-92,-93,-94,-95,-96,-97,-98,-43,-44,-45,-46,-47,-37,-38,-39,-40,-41,-42,-73,-74,-75,-77,-78,-79,-52,-56,62,-90,62,-90,-80,-53,-57,62,62,62,-76,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-91,62,62,-81,-82,-83,-84,62,62,62,-9,62,-20,-22,62,62,62,62,62,62,62,-21,-18,-17,-19,62,]),'DIVIDE':([5,12,13,18,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,50,54,56,76,80,83,84,87,94,95,99,100,101,102,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,130,134,138,139,140,141,142,146,149,154,160,170,171,172,174,175,177,182,184,185,186,188,191,195,197,199,],[63,-99,-100,-90,63,-89,-92,-93,-94,-95,-96,-97,-98,-43,-44,-45,-46,-47,-37,-38,-39,-40,-41,-42,-73,-74,-75,-77,-78,-79,-52,-56,63,-90,63,-90,-80,-53,-57,63,63,63,-76,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-91,63,63,-81,-82,-83,-84,63,63,63,-9,63,-20,-22,63,63,63,63,63,63,63,-21,-18,-17,-19,63,]),'EQUALS':([5,12,13,18,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,50,54,56,76,80,83,84,87,94,95,99,100,101,102,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,130,134,138,139,140,141,142,146,149,154,160,170,171,172,174,175,177,182,184,185,186,188,191,195,197,199,],[64,-99,-100,-90,64,-89,-92,-93,-94,-95,-96,-97,-98,-43,-44,-45,-46,-47,-37,-38,-39,-40,-41,-42,-73,-74,-75,-77,-78,-79,-52,-56,64,-90,64,-90,-80,-53,-57,64,64,64,-76,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-91,64,64,-81,-82,-83,-84,64,64,64,-9,64,-20,-22,64,64,64,64,64,64,64,-21,-18,-17,-19,64,]),'GT':([5,12,13,18,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,50,54,56,76,80,83,84,87,94,95,99,100,101,102,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,130,134,138,139,140,141,142,146,149,154,160,170,171,172,174,175,177,182,184,185,186,188,191,195,197,199,],[65,-99,-100,-90,65,-89,-92,-93,-94,-95,-96,-97,-98,-43,-44,-45,-46,-47,-37,-38,-39,-40,-41,-42,-73,-74,-75,-77,-78,-79,-52,-56,65,-90,65,-90,-80,-53,-57,65,65,65,-76,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-91,65,65,-81,-82,-83,-84,65,65,65,-9,65,-20,-22,65,65,65,65,65,65,65,-21,-18,-17,-19,65,]),'LT':([5,12,13,18,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,50,54,56,76,80,83,84,87,94,95,99,100,101,102,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,130,134,138,139,140,141,142,146,149,154,160,170,171,172,174,175,177,182,184,185,186,188,191,195,197,199,],[66,-99,-100,-90,66,-89,-92,-93,-94,-95,-96,-97,-98,-43,-44,-45,-46,-47,-37,-38,-39,-40,-41,-42,-73,-74,-75,-77,-78,-79,-52,-56,66,-90,66,-90,-80,-53,-57,66,66,66,-76,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-91,66,66,-81,-82,-83,-84,66,66,66,-9,66,-20,-22,66,66,66,66,66,66,66,-21,-18,-17,-19,66,]),'GE':([5,12,13,18,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,50,54,56,76,80,83,84,87,94,95,99,100,101,102,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,130,134,138,139,140,141,142,146,149,154,160,170,171,172,174,175,177,182,184,185,186,188,191,195,197,199,],[67,-99,-100,-90,67,-89,-92,-93,-94,-95,-96,-97,-98,-43,-44,-45,-46,-47,-37,-38,-39,-40,-41,-42,-73,-74,-75,-77,-78,-79,-52,-56,67,-90,67,-90,-80,-53,-57,67,67,67,-76,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-91,67,67,-81,-82,-83,-84,67,67,67,-9,67,-20,-22,67,67,67,67,67,67,67,-21,-18,-17,-19,67,]),'LE':([5,12,13,18,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,50,54,56,76,80,83,84,87,94,95,99,100,101,102,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,130,134,138,139,140,141,142,146,149,154,160,170,171,172,174,175,177,182,184,185,186,188,191,195,197,199,],[68,-99,-100,-90,68,-89,-92,-93,-94,-95,-96,-97,-98,-43,-44,-45,-46,-47,-37,-38,-39,-40,-41,-42,-73,-74,-75,-77,-78,-79,-52,-56,68,-90,68,-90,-80,-53,-57,68,68,68,-76,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-91,68,68,-81,-82,-83,-84,68,68,68,-9,68,-20,-22,68,68,68,68,68,68,68,-21,-18,-17,-19,68,]),'AND':([5,12,13,18,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,50,54,56,76,80,83,84,87,94,95,99,100,101,102,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,130,134,138,139,140,141,142,146,149,154,160,170,171,172,174,175,177,182,184,185,186,188,191,195,197,199,],[69,-99,-100,-90,69,-89,-92,-93,-94,-95,-96,-97,-98,-43,-44,-45,-46,-47,-37,-38,-39,-40,-41,-42,-73,-74,-75,-77,-78,-79,-52,-56,69,-90,69,-90,-80,-53,-57,69,69,69,-76,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-91,69,69,-81,-82,-83,-84,69,69,69,-9,69,-20,-22,69,69,69,69,69,69,69,-21,-18,-17,-19,69,]),'OR':([5,12,13,18,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,50,54,56,76,80,83,84,87,94,95,99,100,101,102,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,130,134,138,139,140,141,142,146,149,154,160,170,171,172,174,175,177,182,184,185,186,188,191,195,197,199,],[70,-99,-100,-90,70,-89,-92,-93,-94,-95,-96,-97,-98,-43,-44,-45,-46,-47,-37,-38,-39,-40,-41,-42,-73,-74,-75,-77,-78,-79,-52,-56,70,-90,70,-90,-80,-53,-57,70,70,70,-76,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-91,70,70,-81,-82,-83,-84,70,70,70,-9,70,-20,-22,70,70,70,70,70,70,70,-21,-18,-17,-19,70,]),'RPAREN':([12,13,14,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,50,54,56,76,77,78,79,80,81,84,86,87,93,94,95,99,100,101,102,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,130,133,135,136,137,138,139,140,141,142,143,144,145,146,149,150,151,152,153,156,159,160,162,171,172,177,184,185,186,188,191,195,197,199,],[-99,-100,-109,-88,-89,-92,-93,-94,-95,-96,-97,-98,-43,-44,-45,-46,-47,-37,-38,-39,-40,-41,-42,-73,-74,-75,-77,-78,-79,-52,-56,130,131,-23,-24,-27,-25,-90,-109,-80,-109,-53,-57,-54,-55,-72,-76,-48,-49,-50,-51,-58,-65,-59,-66,-60,-67,-61,-68,-62,-69,-63,-70,-64,-71,-91,-28,160,-10,-11,-12,-81,-82,-83,-84,-109,163,-27,164,166,-109,167,168,169,-36,-26,-9,178,-20,-22,-13,-85,-86,-87,-21,-18,-17,-19,200,]),'COMMA':([12,13,20,21,22,23,24,25,26,27,28,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,50,54,56,78,80,81,84,87,94,95,99,100,101,102,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,130,133,136,138,139,140,141,142,145,156,159,160,171,172,177,184,185,186,188,191,195,197,],[-99,-100,-88,-89,-92,-93,-94,-95,-96,-97,-98,-43,-44,-45,-46,-47,-37,-38,-39,-40,-41,-42,-73,-74,-75,-77,-78,-79,-52,-56,132,-27,-25,-90,-80,-53,-57,-54,-55,-72,-76,-48,-49,-50,-51,-58,-65,-59,-66,-60,-67,-61,-68,-62,-69,-63,-70,-64,-71,-91,-28,161,-12,-81,-82,-83,-84,-27,-36,-26,-9,-20,-22,-13,-85,-86,-87,-21,-18,-17,-19,]),'ASSIGN':([18,37,38,39,40,41,42,74,127,156,],[85,-37,-38,-39,-40,-41,-42,126,155,-36,]),'TO_STREAM':([18,80,84,],[87,87,87,]),'CHAIN':([18,80,84,],[88,88,88,]),'STREAMSPLIT':([18,80,84,],[89,89,89,]),'STREAMMERGE':([18,80,84,],[90,90,90,]),'FEEDBACK':([18,80,84,],[91,91,91,]),'LAMBDA':([37,38,39,40,41,42,131,156,158,163,180,],[-37,-38,-39,-40,-41,-42,157,-36,176,179,192,]),'LBRACE':([37,38,39,40,41,42,156,157,164,166,176,178,179,190,192,193,200,],[-37,-38,-39,-40,-41,-42,-36,173,173,173,173,173,173,173,173,173,173,]),'TYPEHINTCOLON':([74,80,131,145,163,178,],[128,128,128,128,128,128,]),'ELSE':([181,195,],[193,-17,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,173,],[2,187,]),'statement':([0,2,173,187,],[3,52,3,52,]),'declaration':([0,2,97,173,187,],[4,4,147,4,4,]),'expression':([0,2,14,15,43,44,51,60,61,62,63,64,65,66,67,68,69,70,85,86,96,98,126,155,157,161,165,167,168,169,173,187,194,],[5,5,76,83,99,100,101,107,108,109,110,112,114,116,118,120,122,124,134,138,146,149,154,170,174,177,182,184,185,186,5,5,199,]),'return_statement':([0,2,173,187,],[6,6,6,6,]),'control_flow':([0,2,173,187,],[7,7,7,7,]),'assignment':([0,2,173,187,],[8,8,8,8,]),'function_definition':([0,2,97,173,187,],[11,11,11,11,11,]),'simple_expression':([0,2,14,15,43,44,51,60,61,62,63,64,65,66,67,68,69,70,85,86,96,98,126,155,157,161,165,167,168,169,173,187,194,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'complex_expression':([0,2,14,15,43,44,51,60,61,62,63,64,65,66,67,68,69,70,85,86,96,98,126,155,157,161,165,167,168,169,173,187,194,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'conditional':([0,2,173,187,],[16,16,16,16,]),'loop':([0,2,173,187,],[17,17,17,17,]),'ptype':([0,2,14,15,43,44,51,60,61,62,63,64,65,66,67,68,69,70,85,86,96,98,126,155,157,161,165,167,168,169,173,187,194,],[20,20,20,20,20,20,20,20,20,20,20,111,113,115,117,119,121,123,20,20,20,20,20,20,175,20,20,20,20,20,20,20,20,]),'type':([0,2,14,15,43,44,51,60,61,62,63,64,65,66,67,68,69,70,85,86,96,98,126,128,155,157,161,165,167,168,169,173,187,194,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,156,21,21,21,21,21,21,21,21,21,21,]),'lambda_function':([0,2,14,15,43,44,51,60,61,62,63,64,65,66,67,68,69,70,85,86,96,98,104,105,106,126,155,157,161,165,167,168,169,173,187,194,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,151,152,153,22,22,22,22,22,22,22,22,22,22,22,]),'binary_arithmetic_operation':([0,2,14,15,43,44,51,60,61,62,63,64,65,66,67,68,69,70,85,86,96,98,126,155,157,161,165,167,168,169,173,187,194,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'unary_arithmetic_operation':([0,2,14,15,43,44,51,60,61,62,63,64,65,66,67,68,69,70,85,86,96,98,126,155,157,161,165,167,168,169,173,187,194,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'logic_expression':([0,2,14,15,43,44,51,60,61,62,63,64,65,66,67,68,69,70,85,86,96,98,126,155,157,161,165,167,168,169,173,187,194,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,172,25,25,25,25,25,25,25,25,]),'function_call_expression':([0,2,14,15,43,44,51,55,60,61,62,63,64,65,66,67,68,69,70,85,86,96,98,126,155,157,161,165,167,168,169,173,187,194,],[26,26,26,26,26,26,26,102,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'object_call_expression':([0,2,14,15,43,44,51,60,61,62,63,64,65,66,67,68,69,70,85,86,96,98,126,155,157,161,165,167,168,169,173,187,194,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'stream_operation':([0,2,14,15,43,44,51,60,61,62,63,64,65,66,67,68,69,70,85,86,96,98,126,155,157,161,165,167,168,169,173,187,194,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'binary_logic_operation':([0,2,14,15,43,44,51,60,61,62,63,64,65,66,67,68,69,70,85,86,96,98,126,155,157,161,165,167,168,169,173,187,194,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'unary_logic_operation':([0,2,14,15,43,44,51,60,61,62,63,64,65,66,67,68,69,70,85,86,96,98,126,155,157,161,165,167,168,169,173,187,194,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'function_call':([0,2,14,15,43,44,51,55,60,61,62,63,64,65,66,67,68,69,70,85,86,96,98,126,155,157,161,165,167,168,169,173,187,194,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'unary_stream_operation':([0,2,14,15,43,44,51,60,61,62,63,64,65,66,67,68,69,70,85,86,96,98,126,155,157,161,165,167,168,169,173,187,194,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'binary_stream_operation':([0,2,14,15,43,44,51,60,61,62,63,64,65,66,67,68,69,70,85,86,96,98,126,155,157,161,165,167,168,169,173,187,194,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'special_stream_operation':([0,2,14,15,43,44,51,60,61,62,63,64,65,66,67,68,69,70,85,86,96,98,126,155,157,161,165,167,168,169,173,187,194,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'binary_arithmetic_operation_rest':([5,20,76,83,99,100,101,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,134,138,146,149,154,170,174,175,177,182,184,185,186,199,],[54,94,54,54,54,54,54,54,54,54,54,94,54,94,54,94,54,94,54,94,54,94,54,94,54,54,54,54,54,54,54,54,94,54,54,54,54,54,54,]),'binary_logic_operation_rest':([5,20,76,83,99,100,101,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,134,138,146,149,154,170,174,175,177,182,184,185,186,199,],[56,95,56,56,56,56,56,56,56,56,56,95,56,95,56,95,56,95,56,95,56,95,56,95,56,56,56,56,56,56,56,56,95,56,56,56,56,56,56,]),'declaration_base':([9,10,],[73,75,]),'opt_param_list':([14,93,143,150,],[77,144,162,77,]),'param_list':([14,93,143,150,],[78,78,78,78,]),'empty':([14,86,93,143,150,],[79,137,79,79,79,]),'param':([14,93,132,143,150,],[81,81,159,81,81,]),'typehint':([74,80,131,145,163,178,],[127,133,158,133,180,190,]),'opt_arg_list':([86,],[135,]),'arg_list':([86,],[136,]),'block_statement':([157,164,166,176,178,179,190,192,193,200,],[171,181,183,188,189,191,196,197,198,201,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',10),
  ('statement -> declaration','statement',1,'p_statement','parser.py',16),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','parser.py',17),
  ('statement -> return_statement SEMICOLON','statement',2,'p_statement','parser.py',18),
  ('statement -> control_flow','statement',1,'p_statement','parser.py',19),
  ('statement -> assignment SEMICOLON','statement',2,'p_statement','parser.py',20),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',25),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',26),
  ('function_call -> IDENTIFIER LPAREN opt_arg_list RPAREN','function_call',4,'p_function_call','parser.py',34),
  ('opt_arg_list -> arg_list','opt_arg_list',1,'p_opt_arg_list','parser.py',39),
  ('opt_arg_list -> empty','opt_arg_list',1,'p_opt_arg_list','parser.py',40),
  ('arg_list -> expression','arg_list',1,'p_arg_list','parser.py',45),
  ('arg_list -> arg_list COMMA expression','arg_list',3,'p_arg_list','parser.py',46),
  ('function_definition -> FN IDENTIFIER LPAREN opt_param_list RPAREN block_statement','function_definition',6,'p_function_definition','parser.py',55),
  ('function_definition -> FN IDENTIFIER LPAREN opt_param_list RPAREN typehint block_statement','function_definition',7,'p_function_definition','parser.py',56),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','parser.py',64),
  ('block_statement -> LBRACE statement_list RBRACE','block_statement',3,'p_block_statement','parser.py',68),
  ('lambda_function -> FN LPAREN opt_param_list RPAREN LAMBDA block_statement','lambda_function',6,'p_lambda_function','parser.py',73),
  ('lambda_function -> FN LPAREN opt_param_list RPAREN typehint LAMBDA block_statement','lambda_function',7,'p_lambda_function','parser.py',74),
  ('lambda_function -> LPAREN opt_param_list RPAREN LAMBDA block_statement','lambda_function',5,'p_lambda_function','parser.py',75),
  ('lambda_function -> LPAREN opt_param_list RPAREN typehint LAMBDA block_statement','lambda_function',6,'p_lambda_function','parser.py',76),
  ('lambda_function -> LPAREN opt_param_list RPAREN LAMBDA logic_expression','lambda_function',5,'p_lambda_function','parser.py',77),
  ('opt_param_list -> param_list','opt_param_list',1,'p_opt_param_list','parser.py',93),
  ('opt_param_list -> empty','opt_param_list',1,'p_opt_param_list','parser.py',94),
  ('param_list -> param','param_list',1,'p_param_list','parser.py',99),
  ('param_list -> param_list COMMA param','param_list',3,'p_param_list','parser.py',100),
  ('param -> IDENTIFIER','param',1,'p_param','parser.py',108),
  ('param -> IDENTIFIER typehint','param',2,'p_param','parser.py',109),
  ('declaration -> VAR declaration_base SEMICOLON','declaration',3,'p_declaration','parser.py',117),
  ('declaration -> CONST declaration_base SEMICOLON','declaration',3,'p_declaration','parser.py',118),
  ('declaration -> function_definition','declaration',1,'p_declaration','parser.py',119),
  ('declaration_base -> IDENTIFIER','declaration_base',1,'p_declaration_base','parser.py',128),
  ('declaration_base -> IDENTIFIER ASSIGN expression','declaration_base',3,'p_declaration_base','parser.py',129),
  ('declaration_base -> IDENTIFIER typehint','declaration_base',2,'p_declaration_base','parser.py',130),
  ('declaration_base -> IDENTIFIER typehint ASSIGN expression','declaration_base',4,'p_declaration_base','parser.py',131),
  ('typehint -> TYPEHINTCOLON type','typehint',2,'p_typehint','parser.py',144),
  ('type -> SINT','type',1,'p_type','parser.py',150),
  ('type -> SFLOAT','type',1,'p_type','parser.py',151),
  ('type -> SSTRING','type',1,'p_type','parser.py',152),
  ('type -> SBOOL','type',1,'p_type','parser.py',153),
  ('type -> SSTREAM','type',1,'p_type','parser.py',154),
  ('type -> SEVENT','type',1,'p_type','parser.py',155),
  ('ptype -> INT','ptype',1,'p_primative_type','parser.py',159),
  ('ptype -> FLOAT','ptype',1,'p_primative_type','parser.py',160),
  ('ptype -> STRING','ptype',1,'p_primative_type','parser.py',161),
  ('ptype -> TRUE','ptype',1,'p_primative_type','parser.py',162),
  ('ptype -> FALSE','ptype',1,'p_primative_type','parser.py',163),
  ('binary_arithmetic_operation_rest -> PLUS expression','binary_arithmetic_operation_rest',2,'p_binary_arithmetic_operation_rest','parser.py',170),
  ('binary_arithmetic_operation_rest -> MINUS expression','binary_arithmetic_operation_rest',2,'p_binary_arithmetic_operation_rest','parser.py',171),
  ('binary_arithmetic_operation_rest -> MULTIPLY expression','binary_arithmetic_operation_rest',2,'p_binary_arithmetic_operation_rest','parser.py',172),
  ('binary_arithmetic_operation_rest -> DIVIDE expression','binary_arithmetic_operation_rest',2,'p_binary_arithmetic_operation_rest','parser.py',173),
  ('binary_arithmetic_operation -> expression binary_arithmetic_operation_rest','binary_arithmetic_operation',2,'p_binary_arithmetic_operation','parser.py',178),
  ('binary_arithmetic_operation -> ptype binary_arithmetic_operation_rest','binary_arithmetic_operation',2,'p_binary_arithmetic_operation','parser.py',179),
  ('unary_arithmetic_operation -> MINUS expression','unary_arithmetic_operation',2,'p_unary_arithmetic_operation','parser.py',187),
  ('unary_arithmetic_operation -> PLUS expression','unary_arithmetic_operation',2,'p_unary_arithmetic_operation','parser.py',188),
  ('binary_logic_operation -> expression binary_logic_operation_rest','binary_logic_operation',2,'p_binary_logic_operation','parser.py',193),
  ('binary_logic_operation -> ptype binary_logic_operation_rest','binary_logic_operation',2,'p_binary_logic_operation','parser.py',194),
  ('binary_logic_operation_rest -> EQUALS ptype','binary_logic_operation_rest',2,'p_binary_logic_operation_rest','parser.py',201),
  ('binary_logic_operation_rest -> GT ptype','binary_logic_operation_rest',2,'p_binary_logic_operation_rest','parser.py',202),
  ('binary_logic_operation_rest -> LT ptype','binary_logic_operation_rest',2,'p_binary_logic_operation_rest','parser.py',203),
  ('binary_logic_operation_rest -> GE ptype','binary_logic_operation_rest',2,'p_binary_logic_operation_rest','parser.py',204),
  ('binary_logic_operation_rest -> LE ptype','binary_logic_operation_rest',2,'p_binary_logic_operation_rest','parser.py',205),
  ('binary_logic_operation_rest -> AND ptype','binary_logic_operation_rest',2,'p_binary_logic_operation_rest','parser.py',206),
  ('binary_logic_operation_rest -> OR ptype','binary_logic_operation_rest',2,'p_binary_logic_operation_rest','parser.py',207),
  ('binary_logic_operation_rest -> EQUALS expression','binary_logic_operation_rest',2,'p_binary_logic_operation_rest','parser.py',208),
  ('binary_logic_operation_rest -> GT expression','binary_logic_operation_rest',2,'p_binary_logic_operation_rest','parser.py',209),
  ('binary_logic_operation_rest -> LT expression','binary_logic_operation_rest',2,'p_binary_logic_operation_rest','parser.py',210),
  ('binary_logic_operation_rest -> GE expression','binary_logic_operation_rest',2,'p_binary_logic_operation_rest','parser.py',211),
  ('binary_logic_operation_rest -> LE expression','binary_logic_operation_rest',2,'p_binary_logic_operation_rest','parser.py',212),
  ('binary_logic_operation_rest -> AND expression','binary_logic_operation_rest',2,'p_binary_logic_operation_rest','parser.py',213),
  ('binary_logic_operation_rest -> OR expression','binary_logic_operation_rest',2,'p_binary_logic_operation_rest','parser.py',214),
  ('unary_logic_operation -> NOT expression','unary_logic_operation',2,'p_unary_logic_operation','parser.py',218),
  ('logic_expression -> binary_logic_operation','logic_expression',1,'p_logic_expression','parser.py',223),
  ('logic_expression -> unary_logic_operation','logic_expression',1,'p_logic_expression','parser.py',224),
  ('function_call_expression -> function_call','function_call_expression',1,'p_function_call_expression','parser.py',229),
  ('object_call_expression -> expression CALL function_call_expression','object_call_expression',3,'p_object_call_expression','parser.py',234),
  ('stream_operation -> unary_stream_operation','stream_operation',1,'p_stream_operation','parser.py',239),
  ('stream_operation -> binary_stream_operation','stream_operation',1,'p_stream_operation','parser.py',240),
  ('stream_operation -> special_stream_operation','stream_operation',1,'p_stream_operation','parser.py',241),
  ('unary_stream_operation -> IDENTIFIER TO_STREAM','unary_stream_operation',2,'p_unary_stream_operation','parser.py',246),
  ('binary_stream_operation -> IDENTIFIER CHAIN IDENTIFIER','binary_stream_operation',3,'p_binary_stream_operation','parser.py',252),
  ('binary_stream_operation -> IDENTIFIER STREAMSPLIT IDENTIFIER','binary_stream_operation',3,'p_binary_stream_operation','parser.py',253),
  ('binary_stream_operation -> IDENTIFIER STREAMMERGE IDENTIFIER','binary_stream_operation',3,'p_binary_stream_operation','parser.py',254),
  ('binary_stream_operation -> IDENTIFIER FEEDBACK IDENTIFIER','binary_stream_operation',3,'p_binary_stream_operation','parser.py',255),
  ('special_stream_operation -> expression FILTEROP LPAREN lambda_function RPAREN expression','special_stream_operation',6,'p_special_stream_operation','parser.py',260),
  ('special_stream_operation -> expression MAP LPAREN lambda_function RPAREN expression','special_stream_operation',6,'p_special_stream_operation','parser.py',261),
  ('special_stream_operation -> expression REDUCE LPAREN lambda_function RPAREN expression','special_stream_operation',6,'p_special_stream_operation','parser.py',262),
  ('simple_expression -> ptype','simple_expression',1,'p_simple_expression','parser.py',268),
  ('simple_expression -> type','simple_expression',1,'p_simple_expression','parser.py',269),
  ('simple_expression -> IDENTIFIER','simple_expression',1,'p_simple_expression','parser.py',270),
  ('simple_expression -> LPAREN expression RPAREN','simple_expression',3,'p_simple_expression','parser.py',271),
  ('simple_expression -> lambda_function','simple_expression',1,'p_simple_expression','parser.py',272),
  ('complex_expression -> binary_arithmetic_operation','complex_expression',1,'p_complex_expression','parser.py',278),
  ('complex_expression -> unary_arithmetic_operation','complex_expression',1,'p_complex_expression','parser.py',279),
  ('complex_expression -> logic_expression','complex_expression',1,'p_complex_expression','parser.py',280),
  ('complex_expression -> function_call_expression','complex_expression',1,'p_complex_expression','parser.py',281),
  ('complex_expression -> object_call_expression','complex_expression',1,'p_complex_expression','parser.py',282),
  ('complex_expression -> stream_operation','complex_expression',1,'p_complex_expression','parser.py',283),
  ('expression -> simple_expression','expression',1,'p_expression','parser.py',288),
  ('expression -> complex_expression','expression',1,'p_expression','parser.py',289),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','parser.py',290),
  ('control_flow -> conditional','control_flow',1,'p_control_flow','parser.py',299),
  ('control_flow -> loop','control_flow',1,'p_control_flow','parser.py',300),
  ('conditional -> IF LPAREN expression RPAREN block_statement ELSE block_statement','conditional',7,'p_conditional','parser.py',305),
  ('conditional -> IF LPAREN expression RPAREN block_statement','conditional',5,'p_conditional','parser.py',306),
  ('loop -> FOR LPAREN declaration SEMICOLON expression SEMICOLON expression RPAREN block_statement','loop',9,'p_loop','parser.py',314),
  ('loop -> WHILE LPAREN expression RPAREN block_statement','loop',5,'p_loop','parser.py',315),
  ('assignment -> IDENTIFIER ASSIGN expression','assignment',3,'p_assignment','parser.py',322),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',329),
]
